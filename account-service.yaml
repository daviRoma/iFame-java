openapi: "3.0.0"
info:
  description: "AccountService API definition."
  version: "1.0.0"
  title: "AccountService"
  contact:
    email: "davide.romano1@student.univaq.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/accountService/account"
tags:
- name: "accounts"
  description: "Operations on account object"
  externalDocs:
    description: "AccountService code definition"
    url: "https://github.com/daviRoma/iFame-java"
schemes:
- "https"
- "http"
paths:
  /{username}:
    get:
      tags:
      - "accounts"
      summary: "Find Account by username"
      operationId: "getAccount"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "Username of account to find"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: "Invalid username value"
  /login:
    post:
      tags:
      - "accounts"
      summary: "User authentication"
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Credential object"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "405":
          description: "Invalid input"
  /list:
    post:
      tags:
      - "accounts"
      summary: "Find Accounts based on username list"
      description: ""
      operationId: "getAccounts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Username list"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        "405":
          description: "Invalid input"
  /register:
    post:
      tags:
      - "accounts"
      summary: "Create new Account"
      description: ""
      operationId: "createAccount"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Account object to be created"
        required: true
        schema:
          $ref: "#/definitions/Account"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        "400":
          description: "Invalid input"
  /update/{id}:
    put:
      tags:
      - "accounts"
      summary: "Update an existing account"
      description: ""
      operationId: "updateAccount"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of account to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Account object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Account"
      responses:
        "200":
          description: "Operation successfully"
        "400":
          description: "Invalid ID supplied"
  /delete/{id}: 
    delete:
      tags:
      - "accounts"
      summary: "Deletes an account"
      description: ""
      operationId: "deleteAccount"
      parameters:
      - name: "id"
        in: "path"
        description: "Account id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Operation successfully"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Account not found"
definitions:
  Account:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      picture:
        type: "string"
      preferences:
        type: "array"
        items:
          type: "string"
    xml:
      name: "Account"
  Credentials:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
externalDocs:
  description: "AccountService code definition"
  url: "https://github.com/daviRoma/iFame-java"